name: ProxKube

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - 'README.md'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - 'README.md'

jobs:
#  test-roles:
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        role: [ add-agent, add-server, apply-manifests, create_VMs, create_VM_template, kube-vip, prepare-infra, prepare-monitoring, prepare-nodes, rke2-download, rke2-prepare ]
#    steps:
#      - uses: actions/checkout@v4
#      - name: Install dependencies
#        run: |
#          pip install ansible-lint
#          pip install molecule[docker] ansible
#          docker pull geerlingguy/docker-ubuntu2004-ansible:latest
#      - name: Run Ansible Lint
#        run: ansible-lint ansible
#      - name: Run Molecule Test for Role
#        run: |
#          cd ansible/roles/${{ matrix.role }}
#          molecule test
#      - name: Clear Ansible Cache (optional)
#        run: rm -rf ~/.ansible/cache

  test-playbooks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        playbook: [ deployment.yml, infrastructure.yml, install_kubernetes.yml ]
    #needs: test-roles
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          pip install ansible-lint
          pip install molecule[docker] ansible
          docker pull geerlingguy/docker-ubuntu2004-ansible:latest
  
      - name: Run Playbook Tests
        run: ansible-playbook ansible/${{ matrix.playbook }}
      
#  prepare-infrastructure:
#    runs-on: ubuntu-latest
#    needs: [ test-playbooks ] # test-roles,
#    steps: 
#      - name: Checkout code
#        uses: actions/checkout@v4 
#
#      - name: Setup Python
#        uses: actions/setup-python@v5
#        with:
#          python-version: '3.x'
#
#      - name: Install Requests
#        run: pip install requests
#
#      - name: Install proxmoxer
#        run: pip install proxmoxer
#        
#      - name: Connect to Tailscale
#        uses: tailscale/github-action@v2
#        with:
#          authkey: ${{ secrets.TAILSCALE_AUTHKEY }}
#          tags: tag:ci
#    
#      - name: Create Proxmox infrastructure
#        uses: dawidd6/action-ansible-playbook@v2
#        with:
#          playbook: ansible/infrastructure.yml
#          directory: ./
#          key: ${{ secrets.SSH_PRIVATE_KEY }}
#          requirements: ansible/collections/requirements.yaml
#          options: |
#            --inventory ansible/inventory/.ansible_inventory
#            --extra-vars "@ansible/inventory/variables.yml"
#            --extra-vars "proxmox_api_user=${{ secrets.PROXMOX_API_USER }}" 
#            --extra-vars "proxmox_api_token_id=${{ secrets.PROXMOX_API_TOKEN_ID }}" 
#            --extra-vars "proxmox_api_token_secret=${{ secrets.PROXMOX_API_TOKEN_SECRET }}"
#            --verbose
#
#  install-kubernetes:
#    runs-on: ubuntu-latest
#    needs: prepare-infrastructure
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Connect to Tailscale
#        uses: tailscale/github-action@v2
#        with:
#          authkey: ${{ secrets.TAILSCALE_AUTHKEY }}
#          tags: tag:ci
#      
#      - name: Run Kubernetes install
#        uses: dawidd6/action-ansible-playbook@v2
#        with:
#          playbook: ansible/install_kubernetes.yml
#          directory: ./
#          # Use secrets manager to access SSH key securely
#          key: ${{ secrets.SSH_PRIVATE_KEY }}
#          requirements: ansible/collections/requirements.yaml
#          # Use the copied inventory file #ansible/inv.yml
#          options: |
#           --inventory ansible/inventory/.ansible_inventory 
#           --extra-vars "@ansible/inventory/variables.yml"
#           --verbose

  deployment:
    runs-on: ubuntu-latest
    #needs: install-kubernetes  
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Connect to Tailscale
        uses: tailscale/github-action@v2
        with:
          authkey: ${{ secrets.TAILSCALE_AUTHKEY }}
          tags: tag:ci
      - name: Install Ansible Collections
        run: |
          ansible-galaxy collection install -r ansible/collections/requirements.yaml
      
      - name: Deployment
        uses: dawidd6/action-ansible-playbook@v2
        with:
          playbook: ansible/deployment.yml
          directory: ./
          # Use secrets manager to access SSH key securely
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          requirements: ansible/collections/requirements.yaml
          # Use the copied inventory file #ansible/inv.yml
          options: |
           --inventory ansible/inventory/.ansible_inventory 
           --extra-vars "@ansible/inventory/variables.yml"
           --verbose